@model string

<div class="card bg-primary m-2 mb-3 shadow-lg p-3 bg-light text-dark rounded">

    <div class="card-body text-center">
        <h2 class="card-title text-success">Enviar Mensagem para Fila
            <i class="fa fa-send"></i>
        </h2>
    </div>

    <div class="row">
        <div class="col">
            <div class="card-body">
                <h6 class="card-title">Texto...</h6>

                <div class="row">
                    <div class="col">
                        <input type="text" name="message" id="messageInput" />
                    </div>
                    <div class="col">
                        <button type="button" class="btn btn-success px-5 " id="sendMessageButton">
                            Enviar
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="col">
            <div class="row m-2 shadow-lg p-3 mb-5 bg-white rounded">
                <h5 class="card-title">Lista de Mensages</h5>
                <div class="col-12 mb-5">
                    <ul class="list-group">
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>



<script>

    function createButtonElement(newListItem) {
        var deleteButton = document.createElement('i');
        deleteButton.className = 'fa fa-times text-danger float-end ';
        deleteButton.addEventListener('click', function () {
            newListItem.remove();
        });

        newListItem.appendChild(deleteButton);
    }

    function createElementListGroupItem(message) {
        let newListItem = document.createElement('li');
        newListItem.className = 'list-group-item';
        newListItem.appendChild(document.createTextNode(message));
        return newListItem;
    }

    // um elemento <i> para o ícone
    function createIconElement(newListItem, id) {
        let iconElement = document.createElement('i');
        iconElement.className = 'fa fa-refresh fa-spin ms-4 text-primary';
        iconElement.id = id;
        newListItem.appendChild(iconElement);
    }

    // adicionar novo elemento à lista
    function addElementListToGroup(newListItem) {
        let ulElement = document.querySelector('.list-group');
        ulElement.appendChild(newListItem);
    }

    function connectSignalR() {
        var connection = new signalR.HubConnectionBuilder().withUrl("/messageHub").build();

        connection.start().then(function () {
            console.log("SignalR connected");
        }).catch(function (err) {
            return console.error(err.toString());
        });

        connection.on("ReceiveMessage", function (message) {
            if (message) {
                let id = message.id;
                let elementHtml = document.getElementById(id);
                if (elementHtml) {
                    elementHtml.className = 'fa fa-check ms-4 text-success';
                }
            }
        });
    }

    document.getElementById('messageInput').addEventListener('keydown', function (event) {
        if (event.keyCode === 13) {
            document.getElementById('sendMessageButton').click();
        }
    });


    document.getElementById('sendMessageButton').addEventListener('click', function () {
        let message = document.getElementById('messageInput').value;

        if (message.trim() !== '') {
            let request = new XMLHttpRequest();

            request.onreadystatechange = function () {
                if (request.readyState === XMLHttpRequest.DONE) {
                    if (request.status === 200) {

                        //add element
                        let dataJson = JSON.parse(request.response);
                        let newListItem = createElementListGroupItem(message);
                        createButtonElement(newListItem);
                        createIconElement(newListItem, dataJson.id);
                        addElementListToGroup(newListItem);

                    } else {
                        alert('Ocorreu um erro ao enviar a mensagem.');
                    }
                }
            };

            request.open('POST', '/Message/SendMessage', true);
            request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            request.send('message=' + encodeURIComponent(message));
        } else {
            alert('Por favor, insira uma mensagem antes de enviar.');
        }
    });


    connectSignalR();

</script>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: whitesmoke;
        margin: 0;
        align-items: center;
    }

    .form-container {
        background-color: #ffffff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        width: 100%;
    }

    input[type="text"] {
        width: calc(100% - 20px);
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
        box-sizing: border-box;
    }
</style>